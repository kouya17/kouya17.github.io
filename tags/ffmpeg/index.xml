<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>ffmpeg on kouya17.com</title><link>https://kouya17.com/tags/ffmpeg/</link><description>Recent content in ffmpeg on kouya17.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 05 Mar 2023 15:33:00 +0900</lastBuildDate><atom:link href="https://kouya17.com/tags/ffmpeg/index.xml" rel="self" type="application/rss+xml"/><item><title>音声ライブ配信ができるWebアプリを作成した</title><link>https://kouya17.com/posts/wedio/</link><pubDate>Sun, 05 Mar 2023 15:33:00 +0900</pubDate><guid>https://kouya17.com/posts/wedio/</guid><description>デモ 本Webアプリは以下からアクセスできる。
動作時の動画は以下の通り。
機能一覧 WebRTCによる音声のインジェスト 連続稼働は30分まで HLSによる音声の配信 各配信ごとのチャットルームの作成・参加 配信終了1時間後のデータ自動削除 音声データの流れ 本アプリケーションにおける音声データの流れを図示すると以下のようになる。
付属機能補足 チャット チャットは簡易的にWebSocketを利用して実装している。
配信ごとのルーム管理のため、配信開始時に別プロセスでチャット用プログラムを都度実行する形になっている(&amp;ldquo;管理&amp;quot;といえるほどのものではない)。
データ自動削除 サーバー側で、音声ファイルが格納されているディレクトリの最終更新日時をcronで定期的に監視し、最終更新日時が1時間より前のものを削除している。</description></item><item><title>Raspberry Pi Zero W を使ってタイムラプス生成デバイスを作成する</title><link>https://kouya17.com/posts/timelapse-maker/</link><pubDate>Mon, 21 Mar 2022 13:03:00 +0900</pubDate><guid>https://kouya17.com/posts/timelapse-maker/</guid><description>デモ 本デバイスは以下の動画のように操作できる。
操作時の動画は以下のような感じです。 pic.twitter.com/7l2ocbjlh1
&amp;mdash; 青木晃也 (@aoki_kouya) March 20, 2022 本デバイスを使うと、以下のサイトにあるような動画を生成できる。
動画の出力条件のうち、主な項目は以下の通り。
再生速度: 30倍速 fps: 30 bps: 3Mbps HLS形式 音声なし 料理の動画を掲載しているのは、特に他にコンスタントに撮影できる対象が考えつかなかったため。これらの動画の撮影のために、3Dプリンターでプリントした部品を使ってラズパイとカメラを固定し、台所上部に吊り下げている。
Raspberry Pi Zeroを使って、思い付きでタイムラプスカメラを作りました。 pic.twitter.com/w1fCBfPVzm
&amp;mdash; 青木晃也 (@aoki_kouya) March 5, 2022 確認済み動作条件 ボード Raspberry Pi Zero W OS Raspberry Pi OS(Legacy) 2022-01-28 現時点(2022/03/21)で推奨OSとなっているRaspberry Pi OSはbullseye版だが、buster版(Legacy)の方を使う。これは、ffmpeg(今回利用するマルチメディア処理ソフト)まわりの環境がbullseye版とbuster版で異なっているため。bullseye版を利用する場合、ハードウェアエンコードを有効にするために、ffmpegをビルドする必要が出てくる。
必要な部品 Raspberry Pi Zero W (スイッチサイエンス) microSDカード (Amazon) Raspberry Pi カメラモジュール (スイッチサイエンス) Raspberry Pi Zero用カメラケーブル (スイッチサイエンス) ELECROW 3.</description></item></channel></rss>