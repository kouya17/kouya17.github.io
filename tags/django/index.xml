<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Django on kouya17.com</title><link>https://kouya17.github.io/tech-blog/tags/django/</link><description>Recent content in Django on kouya17.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 31 May 2020 16:40:28 +0900</lastBuildDate><atom:link href="https://kouya17.github.io/tech-blog/tags/django/index.xml" rel="self" type="application/rss+xml"/><item><title>サイトをスマホで表示したとき下端にメニューバーが表示されるようにする</title><link>https://kouya17.github.io/tech-blog/posts/31/</link><pubDate>Sun, 31 May 2020 16:40:28 +0900</pubDate><guid>https://kouya17.github.io/tech-blog/posts/31/</guid><description>スマホの場合は、画面下端の方が圧倒的にタップしやすく、スマホアプリは大体画面下部に重要なナビゲーションが並んでいる。
本サイトもそれに倣って改修する。
環境 Django v2.1.4 Bootstrap v4.2.1 スマホのみに表示する Bootstrapの機能を使う。
以下のようにHTMLに記載すれば、スマホ(画面サイズ768px未満)の場合のみ表示される。
&amp;lt;div class=&amp;#34;d-block d-sm-none&amp;#34;&amp;gt;スマホのみ表示&amp;lt;/div&amp;gt; iPhone8の画面サイズで表示すると以下のように最下部に&amp;quot;スマホのみ表示&amp;quot;というテキストが表示されるが、
iPadの画面サイズで表示すると&amp;quot;スマホのみ表示&amp;quot;というテキストが表示されなくなる。
参考
表示ユーティリティ～Bootstrap4移行ガイド 下端に固定する CSSで実装する 表示位置を絶対位置で指定する。
以下のようにCSSで指定することで画面下端に要素を固定できる。
/* スマホ用画面下端メニュー */ .footer-menu-bar { position: fixed; /* 要素の位置を固定する */ bottom: 0px; /* 絶対位置を指定する(下0px) */ } ただ、この方法だと他コンテンツと重なって表示されてしまうので他の用途に使う場合は注意。(今回の用途としては重なっても問題なしとしている)
参考
【css】フッターをページ下部に固定する方法【お手軽コピペ】 | Pで作業軽減しましょ 横並びでリスト表示する Bootstrapの機能を使ってリスト表示を実装する。
HTMLを以下のように変更する。
&amp;lt;div class=&amp;#34;d-block d-sm-none&amp;#34;&amp;gt;スマホのみ表示&amp;lt;/div&amp;gt; ↓
&amp;lt;div class=&amp;#34;d-sm-none d-block footer-menu-bar w-100 border-top&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;row m-2&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;col&amp;#34;&amp;gt; TOP &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;col&amp;#34;&amp;gt; 検索 &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;col&amp;#34;&amp;gt; タグ &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 表示は以下のようになる。</description></item><item><title>Djangoで記事をカード型で表示するようにした</title><link>https://kouya17.github.io/tech-blog/posts/8/</link><pubDate>Thu, 03 Oct 2019 22:52:14 +0900</pubDate><guid>https://kouya17.github.io/tech-blog/posts/8/</guid><description>参考サイト Bootstrap公式ドキュメント
https://getbootstrap.com/docs/4.3/components/card/
Card decksの部分をほぼそのまま使った。
css部分は以下のQiitaの記事を参考にさせていただいた。
https://qiita.com/iwato/items/840b831ad66fec0dd4c1
コード html &amp;lt;div class=&amp;quot;col-sm-4&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;card card-link post-card&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;{% url 'posts:post_detail' post.id %}&amp;quot;&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;img class=&amp;quot;card-img-top&amp;quot; src=&amp;quot;{{ post.middle_image.url }}&amp;quot; alt=&amp;quot;thumbnail&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;card-body&amp;quot;&amp;gt; &amp;lt;h5 class=&amp;quot;card-title&amp;quot;&amp;gt;{{ post.title }}&amp;lt;/h5&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;card-footer&amp;quot;&amp;gt; &amp;lt;small class=&amp;quot;text-muted&amp;quot;&amp;gt;published at {{ post.published|date:&amp;quot;Y/n/j&amp;quot; }}&amp;lt;/small&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 一行に最大3つ記事を表示するためにcol-sm-4を指定している。
記事のサムネイル、タイトル、公開日を表示するようにしている。
css /*div要素全体にリンクをつけるために必要な要素*/ .card-link { position: relative; } .card-link a { position: absolute; top: 0; left: 0; height:100%; width: 100%; } .post-card { margin-top: 5px; margin-bottom: 5px; } カード全体にリンクをつけるために.</description></item><item><title>Djangoでタグクラウドを実装した</title><link>https://kouya17.github.io/tech-blog/posts/7/</link><pubDate>Sun, 15 Sep 2019 15:07:15 +0900</pubDate><guid>https://kouya17.github.io/tech-blog/posts/7/</guid><description>参考ページ https://programmer-jobs.blogspot.com/2012/12/djangodjango-taggit.html
django-taggitとdjango-taggit-templatetagsがあればできるらしい。 実装した流れ 1 setting.pyを確認し、taggitが導入されていることを確認(taggitは昔すでに導入済み)
ただ、taggit-templatetagsは導入されていなかった。
2 pip install django-taggit-templatetagsでインストール
3 setting.pyのINSTALLED_APPSにtaggit-templatetagsを追加
INSTALLED_APPS = ( ... &amp;quot;taggit&amp;quot;, &amp;quot;taggit_templatetags&amp;quot;, ... ) 4 pip freezeでインストールしたtaggit-templatetagsのバージョンを確認
$ pip freeze ... django-taggit-templatetags==0.2.5 ... 5 requirements.txtに4.で確認したバージョン情報を追記
... django-taggit-templatetags==0.2.5 ... 6 デプロイ
7 動作確認したらエラー発生
File &amp;quot;...templatetag_sugar/parser.py&amp;quot;, line 5, in &amp;lt;module&amp;gt; from django.db.models.loading import cache No module named 'django.db.models.loading' django.db.models.loadingがないらしい。
google先生に聞くと、django.db.models.loadingはDjango1.9で廃止され、現在はdjango.appを使う必要があるようだ。
https://stackoverflow.com/questions/36234635/what-is-the-equivalent-of-django-db-models-loading-get-model-in-django-1-9
8 tamplatetag_sugar/parser.pyを修正
- from django.db.models.loading import cache + from django.apps import apps .</description></item></channel></rss>